
    all: "SELECT * FROM movies",
    bare: "SELECT",
    trailing_comma: "SELECT 1,",
    lowercase: "select 1",

    field_single: "SELECT id FROM movies",
    field_multi: "SELECT id, title FROM movies",
    field_ambiguous: "SELECT id FROM movies, genres",
    field_qualified: "SELECT movies.id FROM movies",
    field_qualified_multi: "SELECT movies.id, genres.id FROM movies, genres",
    field_qualified_nested: "SELECT movies.id.value FROM movies",
    field_unknown: "SELECT unknown FROM movies",
    field_unknown_aliased: "SELECT movies.id FROM movies AS m",
    field_unknown_qualified: "SELECT movies.unknown FROM movies",
    field_unknown_table: "SELECT unknown.id FROM movies",
    field_aliased: "SELECT m.id, g.id FROM movies AS m, genres g",

    expr_dynamic: "SELECT 2020 - year AS age FROM movies",
    expr_static: "SELECT 1 + 2 * 3, 'abc' LIKE 'x%' AS nope",
    expr_mixed: "SELECT 1 + 2 * 3, 2020 - released AS age FROM movies",

    as_: r#"SELECT 1, 2 b, 3 AS c, 4 AS "ðŸ‘‹", id AS "some id" FROM movies"#,
    as_bare: "SELECT 1 AS",
    as_all: "SELECT * AS all FROM movies",
    as_duplicate: "SELECT 1 AS a, 2 AS a",
    as_qualified: r#"SELECT 1 AS a.b FROM movies"#,

    from_bare: "SELECT * FROM",
    from_multiple: "SELECT * FROM movies, genres, countries",
    from_unknown: "SELECT * FROM unknown",
    from_alias_duplicate: "SELECT * FROM movies a, genres a",
    from_alias_duplicate_join: "SELECT * FROM movies a JOIN genres a ON TRUE",
    from_duplicate: "SELECT * FROM movies, movies",

    where_bare: "SELECT * FROM movies WHERE",
    where_true: "SELECT * FROM movies WHERE TRUE",
    where_false: "SELECT * FROM movies WHERE FALSE",
    where_null: "SELECT * FROM movies WHERE NULL",
    where_expr: "SELECT * FROM movies WHERE released >= 2000 AND ultrahd",
    where_float: "SELECT * FROM movies WHERE 3.14",
    where_integer: "SELECT * FROM movies WHERE 7",
    where_string: "SELECT * FROM movies WHERE 'abc'",
    where_multi: "SELECT * FROM movies WHERE TRUE, TRUE",
    where_pk: "SELECT * FROM movies WHERE id = 3",
    where_pk_or: "SELECT * FROM movies WHERE id = 3 OR id = 5 OR id = 7",
    where_pk_or_partial: "SELECT * FROM movies WHERE (id = 2 OR id = 3 OR id = 4 OR id = 5) AND genre_id = 1",
    where_index: "SELECT * FROM movies WHERE genre_id = 2 ORDER BY id",
    where_index_or: "SELECT * FROM movies WHERE genre_id = 2 OR genre_id = 3 OR genre_id = 4 OR genre_id = 5 ORDER BY id",
    where_index_or_partial: "SELECT * FROM movies WHERE (genre_id = 2 OR genre_id = 3) AND studio_id = 2 ORDER BY id",
    where_field_unknown: "SELECT * FROM movies WHERE unknown",
    where_field_qualified: "SELECT movies.id, genres.id FROM movies, genres WHERE movies.id >= 3 AND genres.id = 1",
    where_field_ambiguous: "SELECT movies.id, genres.id FROM movies, genres WHERE id >= 3",
    where_field_aliased_select: "SELECT m.id AS movie_id, g.id AS genre_id FROM movies m, genres g WHERE movie_id >= 3 AND genre_id = 1",
    where_field_aliased_table: "SELECT m.id, g.id FROM movies m, genres g WHERE m.id >= 3 AND g.id = 1",
    where_join_inner: "SELECT * FROM movies, genres WHERE movies.genre_id = genres.id",

    order: "SELECT * FROM movies ORDER BY released",
    order_asc: "SELECT * FROM movies ORDER BY released ASC",
    order_asc_lowercase: "SELECT * FROM movies ORDER BY released asc",
    order_desc: "SELECT * FROM movies ORDER BY released DESC",
    order_desc_lowercase: "SELECT * FROM movies ORDER BY released desc",
    order_expr: "SELECT id, title, released, released % 4 AS ord FROM movies ORDER BY released % 4 ASC",
    order_multi: "SELECT * FROM movies ORDER BY ultrahd ASC, id DESC",
    order_noselect: "SELECT id, title FROM movies ORDER BY released",
    order_unknown_dir: "SELECT * FROM movies ORDER BY id X",
    order_field_unknown: "SELECT * FROM movies ORDER BY unknown",
    order_field_qualified: "SELECT movies.id, title, name FROM movies, genres WHERE movies.genre_id = genres.id ORDER BY genres.name, movies.title",
    order_field_aliased: "SELECT movies.id, title, genres.name AS genre FROM movies, genres WHERE movies.genre_id = genres.id ORDER BY genre, title",
    order_field_ambiguous: "SELECT * FROM movies, genres WHERE movies.genre_id = genres.id ORDER BY id",
    order_trailing_comma: "SELECT * FROM movies ORDER BY id,",
    order_aggregate: "SELECT studio_id, MAX(rating) FROM movies GROUP BY studio_id ORDER BY MAX(rating)",
    order_aggregate_noselect: "SELECT studio_id, MAX(rating) FROM movies GROUP BY studio_id ORDER BY MIN(rating)",
    order_group_by_noselect: "SELECT MAX(rating) FROM movies GROUP BY studio_id ORDER BY studio_id",